{"version":3,"sources":["../../src/functions/logger.ts"],"sourcesContent":["import pino from \"pino\";\nimport type { Logger } from \"pino\";\nimport pinoPretty from \"pino-pretty\";\n\nexport interface LoggerOptions {\n  name: string;\n  level?: string;\n  enabled?: boolean;\n}\n\nconst logLevel = process.env.LOG_LEVEL || \"info\";\n\n// Create pretty stream for all contexts\nconst prettyStream = pinoPretty({\n  colorize: true,\n  translateTime: \"HH:MM:ss.l\",\n  ignore: \"pid,hostname\",\n  sync: true, // Important for worker threads\n});\n\nconst pinoOptions: pino.LoggerOptions = {\n  level: logLevel,\n  formatters: {\n    level: (label) => {\n      return { level: label };\n    },\n  },\n};\n\nconst loggers = new Map<string, Logger>();\n\nexport function createLogger(options: LoggerOptions): Logger {\n  const { name, level = logLevel, enabled = true } = options;\n\n  const existingLogger = loggers.get(name);\n  if (existingLogger) {\n    return existingLogger;\n  }\n\n  const loggerConfig: pino.LoggerOptions = {\n    name,\n    level,\n    enabled,\n    formatters: pinoOptions.formatters,\n  };\n\n  // Create logger with pretty stream\n  const logger = pino(loggerConfig, prettyStream);\n\n  loggers.set(name, logger);\n\n  return logger;\n}\n\nexport function getLogger(name: string): Logger | undefined {\n  return loggers.get(name);\n}\n\nexport function clearLoggers(): void {\n  loggers.clear();\n}\n\n// Helper function to enable/disable specific loggers\nexport function setLoggerEnabled(pattern: string, enabled: boolean): void {\n  const regex = new RegExp(pattern.replace(/\\*/g, \".*\"));\n\n  loggers.forEach((logger, name) => {\n    if (regex.test(name)) {\n      logger.level = enabled ? logLevel : \"silent\";\n    }\n  });\n}\n\n// Compatibility layer for the existing setupLogger function\nexport function setupLogger(name: string): pino.Logger {\n  const logger = createLogger({\n    name: `test:${name}`,\n    enabled: process.argv.includes(\"--printlogs\"),\n  });\n\n  return logger;\n}\n\n// Re-export types\nexport type { Logger } from \"pino\";\n"],"mappings":";AAAA,OAAO,UAAU;AAEjB,OAAO,gBAAgB;AAQvB,IAAM,WAAW,QAAQ,IAAI,aAAa;AAG1C,IAAM,eAAe,WAAW;AAAA,EAC9B,UAAU;AAAA,EACV,eAAe;AAAA,EACf,QAAQ;AAAA,EACR,MAAM;AAAA;AACR,CAAC;AAED,IAAM,cAAkC;AAAA,EACtC,OAAO;AAAA,EACP,YAAY;AAAA,IACV,OAAO,CAAC,UAAU;AAChB,aAAO,EAAE,OAAO,MAAM;AAAA,IACxB;AAAA,EACF;AACF;AAEA,IAAM,UAAU,oBAAI,IAAoB;AAEjC,SAAS,aAAa,SAAgC;AAC3D,QAAM,EAAE,MAAM,QAAQ,UAAU,UAAU,KAAK,IAAI;AAEnD,QAAM,iBAAiB,QAAQ,IAAI,IAAI;AACvC,MAAI,gBAAgB;AAClB,WAAO;AAAA,EACT;AAEA,QAAM,eAAmC;AAAA,IACvC;AAAA,IACA;AAAA,IACA;AAAA,IACA,YAAY,YAAY;AAAA,EAC1B;AAGA,QAAM,SAAS,KAAK,cAAc,YAAY;AAE9C,UAAQ,IAAI,MAAM,MAAM;AAExB,SAAO;AACT;AAEO,SAAS,UAAU,MAAkC;AAC1D,SAAO,QAAQ,IAAI,IAAI;AACzB;AAEO,SAAS,eAAqB;AACnC,UAAQ,MAAM;AAChB;AAGO,SAAS,iBAAiB,SAAiB,SAAwB;AACxE,QAAM,QAAQ,IAAI,OAAO,QAAQ,QAAQ,OAAO,IAAI,CAAC;AAErD,UAAQ,QAAQ,CAAC,QAAQ,SAAS;AAChC,QAAI,MAAM,KAAK,IAAI,GAAG;AACpB,aAAO,QAAQ,UAAU,WAAW;AAAA,IACtC;AAAA,EACF,CAAC;AACH;AAGO,SAAS,YAAY,MAA2B;AACrD,QAAM,SAAS,aAAa;AAAA,IAC1B,MAAM,QAAQ,IAAI;AAAA,IAClB,SAAS,QAAQ,KAAK,SAAS,aAAa;AAAA,EAC9C,CAAC;AAED,SAAO;AACT;","names":[]}