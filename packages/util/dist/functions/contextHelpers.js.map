{"version":3,"sources":["../../src/functions/contextHelpers.ts"],"sourcesContent":["import \"@moonbeam-network/api-augment\";\nimport type { u128 } from \"@polkadot/types-codec\";\nimport type {\n  AccountId20,\n  DispatchError,\n  DispatchInfo,\n  EventRecord,\n} from \"@polkadot/types/interfaces\";\n\n// export interface ExtrinsicCreation {\n//   extrinsic: GenericExtrinsic<AnyTuple>;\n//   events: EventRecord[];\n//   error: RegistryError;\n//   successful: boolean;\n//   hash: string;\n// }\n\nexport function filterAndApply<T>(\n  events: EventRecord[],\n  section: string,\n  methods: string[],\n  onFound: (record: EventRecord) => T\n): T[] {\n  return events\n    .filter(({ event }) => section === event.section && methods.includes(event.method))\n    .map((record) => onFound(record));\n}\n\nexport function getDispatchError({\n  event: {\n    data: [dispatchError],\n  },\n}: EventRecord): DispatchError {\n  return dispatchError as DispatchError;\n}\n\nfunction getDispatchInfo({ event: { data, method } }: EventRecord): DispatchInfo {\n  return method === \"ExtrinsicSuccess\" ? (data[0] as DispatchInfo) : (data[1] as DispatchInfo);\n}\n\nexport function extractError(events: EventRecord[] = []): DispatchError | undefined {\n  return filterAndApply(events, \"system\", [\"ExtrinsicFailed\"], getDispatchError)[0];\n}\n\n// export function extractFees(events: EventRecord[] = []): number {\n//   return filterAndApply(events, \"balances\", [\"Transfer\"], () => true).length;\n// }\n\nexport function isExtrinsicSuccessful(events: EventRecord[] = []): boolean {\n  return filterAndApply(events, \"system\", [\"ExtrinsicSuccess\"], () => true).length > 0;\n}\n\nexport function extractInfo(events: EventRecord[] = []): DispatchInfo | undefined {\n  return filterAndApply(\n    events,\n    \"system\",\n    [\"ExtrinsicFailed\", \"ExtrinsicSuccess\"],\n    getDispatchInfo\n  )[0];\n}\n\nexport function extractFee(events: EventRecord[] = []) {\n  return filterAndApply(\n    events,\n    \"balances\",\n    [\"Withdraw\"],\n    ({ event }: EventRecord) => event.data as unknown as { who: AccountId20; amount: u128 }\n  )[0];\n}\n"],"mappings":";AAAA,OAAO;AAiBA,SAAS,eACd,QACA,SACA,SACA,SACK;AACL,SAAO,OACJ,OAAO,CAAC,EAAE,MAAM,MAAM,YAAY,MAAM,WAAW,QAAQ,SAAS,MAAM,MAAM,CAAC,EACjF,IAAI,CAAC,WAAW,QAAQ,MAAM,CAAC;AACpC;AAEO,SAAS,iBAAiB;AAAA,EAC/B,OAAO;AAAA,IACL,MAAM,CAAC,aAAa;AAAA,EACtB;AACF,GAA+B;AAC7B,SAAO;AACT;AAEA,SAAS,gBAAgB,EAAE,OAAO,EAAE,MAAM,OAAO,EAAE,GAA8B;AAC/E,SAAO,WAAW,qBAAsB,KAAK,CAAC,IAAsB,KAAK,CAAC;AAC5E;AAEO,SAAS,aAAa,SAAwB,CAAC,GAA8B;AAClF,SAAO,eAAe,QAAQ,UAAU,CAAC,iBAAiB,GAAG,gBAAgB,EAAE,CAAC;AAClF;AAMO,SAAS,sBAAsB,SAAwB,CAAC,GAAY;AACzE,SAAO,eAAe,QAAQ,UAAU,CAAC,kBAAkB,GAAG,MAAM,IAAI,EAAE,SAAS;AACrF;AAEO,SAAS,YAAY,SAAwB,CAAC,GAA6B;AAChF,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA,CAAC,mBAAmB,kBAAkB;AAAA,IACtC;AAAA,EACF,EAAE,CAAC;AACL;AAEO,SAAS,WAAW,SAAwB,CAAC,GAAG;AACrD,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA,CAAC,UAAU;AAAA,IACX,CAAC,EAAE,MAAM,MAAmB,MAAM;AAAA,EACpC,EAAE,CAAC;AACL;","names":[]}