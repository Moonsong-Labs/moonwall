{"version":3,"sources":["../../src/constants/chain.ts"],"sourcesContent":["import \"@moonbeam-network/api-augment\";\nexport const SPECS_PATH = \"./moonbeam-test-specs\";\n\nexport const DEBUG_MODE = process.env.DEBUG_MODE || false;\nexport const DISPLAY_LOG = process.env.MOONBEAM_LOG || false;\nexport const MOONBEAM_LOG = process.env.MOONBEAM_LOG || \"info\";\n\nexport const BASE_PATH = process.env.BASE_PATH;\nexport const CUSTOM_SPEC_PATH = process.env.CUSTOM_SPEC_PATH;\nexport const BINARY_PATH = process.env.BINARY_PATH || \"../target/release/moonbeam\";\nexport const RELAY_BINARY_PATH = process.env.RELAY_BINARY_PATH || \"../target/release/polkadot\";\nexport const RELAY_LOG = process.env.RELAY_LOG;\n\n// Is undefined by default as the path is dependent of the runtime.\nexport const OVERRIDE_RUNTIME_PATH = process.env.OVERRIDE_RUNTIME_PATH || undefined;\nexport const SPAWNING_TIME = 20000;\nexport const ETHAPI_CMD = process.env.ETHAPI_CMD || \"\";\nexport const WASM_RUNTIME_OVERRIDES = process.env.WASM_RUNTIME_OVERRIDES || \"\";\n\nexport const RELAY_CHAIN_NODE_NAMES = [\"Alice\", \"Bob\", \"Charlie\", \"Dave\", \"Eve\", \"Ferdie\", \"One\"];\n\n// Test variables\nexport const ZERO_ADDRESS = \"0x0000000000000000000000000000000000000000\";\nexport const TREASURY_ACCOUNT = \"0x6d6f646c70632f74727372790000000000000000\";\nexport const GLMR = 1_000_000_000_000_000_000n;\nexport const MILLIGLMR = 1_000_000_000_000_000n;\nexport const MICROGLMR = 1_000_000_000_000n;\nexport const DEFAULT_GENESIS_BALANCE = 2n ** 80n;\nexport const DEFAULT_GENESIS_STAKING = 1_000n * GLMR;\nexport const DEFAULT_GENESIS_MAPPING = 100n * GLMR;\nexport const PROPOSAL_AMOUNT = 1000n * GLMR;\nexport const VOTE_AMOUNT = 10n * GLMR;\nexport const MIN_GLMR_STAKING = 1000n * GLMR;\nexport const MIN_GLMR_DELEGATOR = 1n * GLMR;\n\n// Weight correspond to 1 picosecond\nexport const WEIGHT_PER_SECOND = 1_000_000_000_000n;\n\n// Current gas per second\nexport const GAS_PER_SECOND = 40_000_000n;\nexport const GAS_PER_WEIGHT = WEIGHT_PER_SECOND / GAS_PER_SECOND;\n\n// Maximum Gas to PoV ratio used in the gasometer\nexport const GAS_PER_POV_BYTES = 4n;\n\n// Our weight limit is 500ms.\nexport const BLOCK_WEIGHT_LIMIT = WEIGHT_PER_SECOND / 2n;\n\n// Block limit is 20M gas but only 75% is used for normal transactions, limiting to 15M Gas\nexport const BLOCK_GAS_LIMIT = BLOCK_WEIGHT_LIMIT / GAS_PER_WEIGHT;\n\n// Maximum extrinsic weight is taken from the max allowed transaction weight per block (75%),\n// minus the block initialization (10%) and minus the extrinsic base cost.\nexport const EXTRINSIC_GAS_LIMIT = (BLOCK_GAS_LIMIT * 3n) / 4n - BLOCK_GAS_LIMIT / 10n;\n\n// Maximum PoV size in bytes allowed for a manual sealing dev block by substrate.\nexport const MAX_BLOCK_DEV_POV = 4 * 1024 * 1024 + 512;\n\n// Maximum PoV size in bytes allowed by the gasometer for one ethereum transaction\nexport const MAX_ETH_POV_PER_TX = EXTRINSIC_GAS_LIMIT / GAS_PER_POV_BYTES;\n\nexport const EXTRINSIC_BASE_WEIGHT = 250_000_000;\n\n// Weight per gas mapping\nexport const WEIGHT_PER_GAS = 1_000_000_000_000n / 40_000_000n;\n\nexport const MIN_GAS_PRICE = 10_000_000_000n;\n\nexport const GAS_LIMIT_POV_RATIO = 4;\n\nexport const PRECOMPILE_PARACHAIN_STAKING_ADDRESS = \"0x0000000000000000000000000000000000000800\";\nexport const PRECOMPILE_CROWDLOAN_REWARDS_ADDRESS = \"0x0000000000000000000000000000000000000801\";\nexport const PRECOMPILE_NATIVE_ERC20_ADDRESS = \"0x0000000000000000000000000000000000000802\";\nexport const PRECOMPILE_DEMOCRACY_ADDRESS = \"0x0000000000000000000000000000000000000803\";\nexport const PRECOMPILE_XTOKENS_ADDRESS = \"0x0000000000000000000000000000000000000804\";\nexport const PRECOMPILE_RELAY_ENCODER_ADDRESS = \"0x0000000000000000000000000000000000000805\";\nexport const PRECOMPILE_XCM_TRANSACTOR_ADDRESS_V1 = \"0x0000000000000000000000000000000000000806\";\nexport const PRECOMPILE_AUTHOR_MAPPING_ADDRESS = \"0x0000000000000000000000000000000000000807\";\nexport const PRECOMPILE_BATCH_ADDRESS = \"0x0000000000000000000000000000000000000808\";\nexport const PRECOMPILE_RANDOMNESS_ADDRESS = \"0x0000000000000000000000000000000000000809\";\nexport const PRECOMPILE_CALL_PERMIT_ADDRESS = \"0x000000000000000000000000000000000000080a\";\nexport const PRECOMPILE_PROXY_ADDRESS = \"0x000000000000000000000000000000000000080b\";\nexport const PRECOMPILE_XCM_UTILS_ADDRESS = \"0x000000000000000000000000000000000000080c\";\nexport const PRECOMPILE_XCM_TRANSACTOR_ADDRESS_V2 = \"0x000000000000000000000000000000000000080d\";\nexport const PRECOMPILE_COUNCIL_ADDRESS = \"0x000000000000000000000000000000000000080e\";\nexport const PRECOMPILE_TECH_COMMITTEE_ADDRESS = \"0x000000000000000000000000000000000000080f\";\nexport const PRECOMPILE_TREASURY_COUNCIL_ADDRESS = \"0x0000000000000000000000000000000000000810\";\nexport const PRECOMPILE_DISPATCH_ADDRESS = \"0x0000000000000000000000000000000000000401\";\nexport const PRECOMPILE_REFERENDA_ADDRESS = \"0x0000000000000000000000000000000000000811\";\nexport const PRECOMPILE_CONVICTION_VOTING_ADDRESS = \"0x0000000000000000000000000000000000000812\";\nexport const PRECOMPILE_PREIMAGE_ADDRESS = \"0x0000000000000000000000000000000000000813\";\nexport const PRECOMPILE_OPEN_TECH_COMMITTEE_ADDRESS = \"0x0000000000000000000000000000000000000814\";\nexport const PRECOMPILE_GMP_ADDRESS = \"0x0000000000000000000000000000000000000816\";\n\nexport const PRECOMPILES = {\n  ParachainStaking: \"0x0000000000000000000000000000000000000800\",\n  CrowdloanRewards: \"0x0000000000000000000000000000000000000801\",\n  NativeErc20: [\"0x0000000000000000000000000000000000000802\", \"IERC20\"],\n  Democracy: \"0x0000000000000000000000000000000000000803\",\n  Xtokens: \"0x0000000000000000000000000000000000000804\",\n  RelayEncoder: \"0x0000000000000000000000000000000000000805\",\n  XcmTransactorV1: \"0x0000000000000000000000000000000000000806\",\n  AuthorMapping: \"0x0000000000000000000000000000000000000807\",\n  Batch: \"0x0000000000000000000000000000000000000808\",\n  Randomness: \"0x0000000000000000000000000000000000000809\",\n  CallPermit: \"0x000000000000000000000000000000000000080a\",\n  Proxy: \"0x000000000000000000000000000000000000080b\",\n  XcmUtils: \"0x000000000000000000000000000000000000080c\",\n  XcmTransactorV2: \"0x000000000000000000000000000000000000080d\",\n  Council: [\"0x000000000000000000000000000000000000080e\", \"Collective\"],\n  TechCommittee: [\"0x000000000000000000000000000000000000080f\", \"Collective\"],\n  TreasuryCouncil: [\"0x0000000000000000000000000000000000000810\", \"Collective\"],\n  // DISPATCH: \"0x0000000000000000000000000000000000000401\",\n  Referenda: \"0x0000000000000000000000000000000000000811\",\n  ConvictionVoting: \"0x0000000000000000000000000000000000000812\",\n  Preimage: \"0x0000000000000000000000000000000000000813\",\n  // OpenTechCommittee: \"0x0000000000000000000000000000000000000814\",\n  Gmp: \"0x0000000000000000000000000000000000000816\",\n} as const;\n\nexport const MINUTES = 60 / 12;\nexport const HOURS = MINUTES * 60;\nexport const DAYS = HOURS * 24;\n\nexport const TWO_MINS = 2 * 60 * 1000;\nexport const FIVE_MINS = 5 * 60 * 1000;\nexport const TEN_MINS = 10 * 60 * 1000;\nexport const THIRTY_MINS = 30 * 60 * 1000;\nexport const ONE_HOURS = 60 * 60 * 1000;\nexport const TWO_HOURS = 2 * 60 * 60 * 1000;\nexport const THREE_HOURS = 3 * 60 * 60 * 1000;\nexport const FOUR_HOURS = 4 * 60 * 60 * 1000;\n\nexport const CONTRACT_RANDOMNESS_STATUS_DOES_NOT_EXISTS = 0;\nexport const CONTRACT_RANDOMNESS_STATUS_PENDING = 1;\nexport const CONTRACT_RANDOMNESS_STATUS_READY = 2;\nexport const CONTRACT_RANDOMNESS_STATUS_EXPIRED = 3;\n\nexport const CONTRACT_PROXY_TYPE_ANY = 0;\nexport const CONTRACT_PROXY_TYPE_NON_TRANSFER = 1;\nexport const CONTRACT_PROXY_TYPE_GOVERNANCE = 2;\nexport const CONTRACT_PROXY_TYPE_STAKING = 3;\nexport const CONTRACT_PROXY_TYPE_CANCEL_PROXY = 4;\nexport const CONTRACT_PROXY_TYPE_BALANCES = 5;\nexport const CONTRACT_PROXY_TYPE_AUTHOR_MAPPING = 6;\nexport const CONTRACT_PROXY_TYPE_IDENTITY_JUDGEMENT = 7;\n\nexport const MAX_BLOCK_WEIGHT = 500_000_000_000;\n\n// This is the target fill perbill amount accounting for base extrinsic fee, i.e. 187,000,000\n// Defined as a runtime constant: \"TargetBlockFullness\"\nexport const TARGET_FILL_AMOUNT =\n  ((MAX_BLOCK_WEIGHT * 0.75 * 0.25 - EXTRINSIC_BASE_WEIGHT) / MAX_BLOCK_WEIGHT) * 1_000_000_000;\n\nexport const TARGET_FILL_PERMILL = 0.25 * 1_000_000; // Equivalent to 25%\nexport const WEIGHT_FEE = 50n * 1000n;\n\nexport const RUNTIME_CONSTANTS = {\n  MOONBASE: {\n    MIN_FEE_MULTIPLIER: \"100000000000000000\",\n    MAX_FEE_MULTIPLIER: \"100000000000000000000000\",\n    MIN_BASE_FEE_IN_WEI: \"125000000\",\n    MAX_BASE_FEE_IN_WEI: \"125000000000000\",\n  },\n  MOONRIVER: {\n    MIN_FEE_MULTIPLIER: \"1000000000000000000\",\n    MAX_FEE_MULTIPLIER: \"100000000000000000000000\",\n    MIN_BASE_FEE_IN_WEI: \"1250000000\",\n    MAX_BASE_FEE_IN_WEI: \"125000000000000\",\n  },\n  MOONBEAM: {\n    MIN_FEE_MULTIPLIER: \"1000000000000000000\",\n    MAX_FEE_MULTIPLIER: \"100000000000000000000000\",\n    MIN_BASE_FEE_IN_WEI: \"125000000000\",\n    MAX_BASE_FEE_IN_WEI: \"12500000000000000\",\n  },\n} as const;\n\nexport const DUMMY_REVERT_BYTECODE = \"0x60006000fd\";\n"],"mappings":"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","names":[]}