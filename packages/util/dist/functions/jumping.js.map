{"version":3,"sources":["../../src/functions/jumping.ts"],"sourcesContent":["import \"@moonbeam-network/api-augment\";\nimport type { ApiPromise } from \"@polkadot/api\";\nimport WebSocket from \"ws\";\n\n//**************************\n// DEV\n//**************************\n\nexport async function jumpBlocksDev(polkadotJsApi: ApiPromise, blocks: number) {\n  let blockCount = blocks;\n\n  while (blockCount > 0) {\n    await polkadotJsApi.rpc.engine.createBlock(true, true);\n    blockCount--;\n  }\n}\n\nexport async function jumpRoundsDev(\n  polkadotJsApi: ApiPromise,\n  count: number\n): Promise<string | null> {\n  // Calculate the number of blocks to create via arithmetic\n  const round = (await polkadotJsApi.query.parachainStaking.round()).current\n    .addn(count.valueOf())\n    .toNumber();\n\n  return jumpToRoundDev(polkadotJsApi, round);\n}\n\nexport async function jumpToRoundDev(polkadotJsApi: ApiPromise, round: number) {\n  // Calculate the number of blocks to create via arithmetic\n  let lastBlockHash = \"\";\n  for (;;) {\n    const currentRound = (await polkadotJsApi.query.parachainStaking.round()).current.toNumber();\n\n    if (currentRound === round) {\n      return lastBlockHash;\n    }\n    if (currentRound > round) {\n      return null;\n    }\n\n    lastBlockHash = (await polkadotJsApi.rpc.engine.createBlock(true, true)).blockHash.toString();\n  }\n}\n\n//**************************\n// CHOPSTICKS\n//**************************\n\nasync function calculateBlocks(polkadotJsApi: ApiPromise, targetRound: number) {\n  const roundInfo = await polkadotJsApi.query.parachainStaking.round();\n\n  if (roundInfo.current.toNumber() >= targetRound) {\n    return 0;\n  }\n\n  const roundsToJump = targetRound - roundInfo.current.toNumber();\n  const heightToJump = roundInfo.first.toNumber() + roundsToJump * roundInfo.length.toNumber();\n  const currentBlock = (await polkadotJsApi.rpc.chain.getHeader()).number.toNumber();\n\n  return heightToJump - currentBlock;\n}\n\nexport async function jumpRoundsChopsticks(polkadotJsApi: ApiPromise, port: number, count: number) {\n  const round = (await polkadotJsApi.query.parachainStaking.round()).current\n    .addn(count.valueOf())\n    .toNumber();\n\n  return jumpToRoundChopsticks(polkadotJsApi, port, round);\n}\n\nexport async function jumpToRoundChopsticks(\n  polkadotJsApi: ApiPromise,\n  port: number,\n  round: number\n) {\n  const blockToJump = await calculateBlocks(polkadotJsApi, round);\n  return jumpBlocksChopsticks(port, blockToJump);\n}\n\nexport async function jumpBlocksChopsticks(port: number, blockCount: number) {\n  return await sendNewBlockCmd(port, blockCount);\n}\n\nconst sendNewBlockCmd = async (port: number, count = 1) => {\n  const websocketUrl = `ws://127.0.0.1:${port}`;\n  const socket = new WebSocket(websocketUrl);\n\n  const result: string = await new Promise((resolve) => {\n    socket.on(\"open\", () => {\n      socket.send(\n        JSON.stringify({\n          jsonrpc: \"2.0\",\n          id: 1,\n          method: \"dev_newBlock\",\n          params: [{ count }],\n        })\n      );\n    });\n\n    socket.on(\"message\", (chunk) => {\n      const data: { id: number; jsonrpc: string; result: string } = JSON.parse(chunk.toString());\n      resolve(data.result);\n      socket.close();\n    });\n  });\n\n  return result;\n};\n"],"mappings":";AAAA,OAAO;AAEP,OAAO,eAAe;AAMtB,eAAsB,cAAc,eAA2B,QAAgB;AAC7E,MAAI,aAAa;AAEjB,SAAO,aAAa,GAAG;AACrB,UAAM,cAAc,IAAI,OAAO,YAAY,MAAM,IAAI;AACrD;AAAA,EACF;AACF;AAEA,eAAsB,cACpB,eACA,OACwB;AAExB,QAAM,SAAS,MAAM,cAAc,MAAM,iBAAiB,MAAM,GAAG,QAChE,KAAK,MAAM,QAAQ,CAAC,EACpB,SAAS;AAEZ,SAAO,eAAe,eAAe,KAAK;AAC5C;AAEA,eAAsB,eAAe,eAA2B,OAAe;AAE7E,MAAI,gBAAgB;AACpB,aAAS;AACP,UAAM,gBAAgB,MAAM,cAAc,MAAM,iBAAiB,MAAM,GAAG,QAAQ,SAAS;AAE3F,QAAI,iBAAiB,OAAO;AAC1B,aAAO;AAAA,IACT;AACA,QAAI,eAAe,OAAO;AACxB,aAAO;AAAA,IACT;AAEA,qBAAiB,MAAM,cAAc,IAAI,OAAO,YAAY,MAAM,IAAI,GAAG,UAAU,SAAS;AAAA,EAC9F;AACF;AAMA,eAAe,gBAAgB,eAA2B,aAAqB;AAC7E,QAAM,YAAY,MAAM,cAAc,MAAM,iBAAiB,MAAM;AAEnE,MAAI,UAAU,QAAQ,SAAS,KAAK,aAAa;AAC/C,WAAO;AAAA,EACT;AAEA,QAAM,eAAe,cAAc,UAAU,QAAQ,SAAS;AAC9D,QAAM,eAAe,UAAU,MAAM,SAAS,IAAI,eAAe,UAAU,OAAO,SAAS;AAC3F,QAAM,gBAAgB,MAAM,cAAc,IAAI,MAAM,UAAU,GAAG,OAAO,SAAS;AAEjF,SAAO,eAAe;AACxB;AAEA,eAAsB,qBAAqB,eAA2B,MAAc,OAAe;AACjG,QAAM,SAAS,MAAM,cAAc,MAAM,iBAAiB,MAAM,GAAG,QAChE,KAAK,MAAM,QAAQ,CAAC,EACpB,SAAS;AAEZ,SAAO,sBAAsB,eAAe,MAAM,KAAK;AACzD;AAEA,eAAsB,sBACpB,eACA,MACA,OACA;AACA,QAAM,cAAc,MAAM,gBAAgB,eAAe,KAAK;AAC9D,SAAO,qBAAqB,MAAM,WAAW;AAC/C;AAEA,eAAsB,qBAAqB,MAAc,YAAoB;AAC3E,SAAO,MAAM,gBAAgB,MAAM,UAAU;AAC/C;AAEA,IAAM,kBAAkB,OAAO,MAAc,QAAQ,MAAM;AACzD,QAAM,eAAe,kBAAkB,IAAI;AAC3C,QAAM,SAAS,IAAI,UAAU,YAAY;AAEzC,QAAM,SAAiB,MAAM,IAAI,QAAQ,CAAC,YAAY;AACpD,WAAO,GAAG,QAAQ,MAAM;AACtB,aAAO;AAAA,QACL,KAAK,UAAU;AAAA,UACb,SAAS;AAAA,UACT,IAAI;AAAA,UACJ,QAAQ;AAAA,UACR,QAAQ,CAAC,EAAE,MAAM,CAAC;AAAA,QACpB,CAAC;AAAA,MACH;AAAA,IACF,CAAC;AAED,WAAO,GAAG,WAAW,CAAC,UAAU;AAC9B,YAAM,OAAwD,KAAK,MAAM,MAAM,SAAS,CAAC;AACzF,cAAQ,KAAK,MAAM;AACnB,aAAO,MAAM;AAAA,IACf,CAAC;AAAA,EACH,CAAC;AAED,SAAO;AACT;","names":[]}