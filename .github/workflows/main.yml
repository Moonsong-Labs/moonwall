name: CI
on:
  push:
    branches:
      - "**"
env:
  WSS_URL: ws://127.0.0.1:9955
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: pnpm/action-setup@v4
        with:
          version: 9.1.4
      - uses: actions/setup-node@v4
        with:
          node-version: 23 # Changed from 20 to 23 to match other jobs, ensure consistency
          cache: "pnpm"
      - run: pnpm install
      - run: pnpm run build
      - name: Set moonbeam cache key
        id: set-moonbeam-cache-key
        run: echo "key=moonbeam-bin-v0.45" >> $GITHUB_OUTPUT
      - uses: actions/checkout@v4
      - name: Restore moonbeam binary cache
        uses: actions/cache/restore@v4
        id: moonbeam-cache-restore
        with:
          path: test/tmp/moonbeam
          key: ${{ steps.set-moonbeam-cache-key.outputs.key }}
      - name: Download moonbeam binary if not cached
        if: steps.moonbeam-cache-restore.outputs.cache-hit != 'true'
        run: |
          mkdir -p test/tmp
          cd test
          pnpm moonwall download moonbeam 0.45 ./tmp
      - name: Save moonbeam binary to cache
        uses: actions/cache/save@v4
        if: steps.moonbeam-cache-restore.outputs.cache-hit != 'true'
        with:
          path: test/tmp/moonbeam
          key: ${{ steps.set-moonbeam-cache-key.outputs.key }}

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 9.1.4
      - uses: actions/setup-node@v4
        with:
          node-version: 23
          cache: "pnpm"
      - run: pnpm install
      - run: pnpm run lint

  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 9.1.4
      - uses: actions/setup-node@v4
        with:
          node-version: 23
          cache: "pnpm"
      - run: pnpm install
      - run: pnpm run fmt
  
  test_init:
    runs-on: ubuntu-latest
    needs: ["build"]
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 9.1.4
      - uses: actions/setup-node@v4
        with:
          node-version: 23
          cache: "pnpm"
      - name: Build like before
        run: |
          pnpm install   
          pnpm run build
      - name: Initialize config
        run: |
          cd test
          rm -f moonwall.config.json # Added -f to avoid error if file doesn't exist
          pnpm moonwall init --acceptAllDefaults
      - name: Run test
        run: |
          cd test
          pnpm moonwall test default_env

  test_basic:
    runs-on: ubuntu-latest
    needs: ["build"]
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 9.1.4
      - uses: actions/setup-node@v4
        with:
          node-version: 23
          cache: "pnpm"
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Build like before
        run: |
          pnpm install   
          pnpm run build
      - name: Run standard dev test
        run: |
          cd test
          bun moonwall test basic

  test_tanssi:
    runs-on: ubuntu-latest
    needs: ["build"]
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v1 # Moved up to be available for download step
        with:
          bun-version: latest
      - uses: pnpm/action-setup@v4
        with:
          version: 9.1.4
      - uses: actions/setup-node@v4
        with:
          node-version: 23
          cache: "pnpm"
      - name: Build like before
        run: |
          pnpm install  
          pnpm run build
      - name: Download tanssi binary
        run: |
          cd test
          bun moonwall download tanssi-node latest ./tmp
      - name: Run standard dev test
        run: |
          cd test
          bun moonwall test dev_tanssi

  test_dev:
    runs-on: ubuntu-latest
    needs: ["build"] # Changed from ["build", "cache_moonbeam"]
    env:
      NODE_OPTIONS: "--no-deprecation"
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    strategy:
      fail-fast: false
      matrix:
        suite: ["dev_test", "dev_multi", "dev_seq", "dev_smoke", "papi_dev", "fork_test", "dev_docker"]
        shard: [1, 2, 3, 4]
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v1 # Added setup-bun for bun commands
        with:
          bun-version: latest
      - uses: pnpm/action-setup@v4
        with:
          version: 9.1.4
      - uses: actions/setup-node@v4
        with:
          node-version: 23
          cache: "pnpm"
      # Removed Restore moonbeam binary cache step as it's handled by 'build' job
      - name: Build like before
        run: |
          pnpm install  
          pnpm run build
      - name: Run ${{matrix.suite}} dev test
        run: |
          cd test
          bun papi generate
          bun moonwall test ${{matrix.suite}}  --ts ${{ matrix.shard }}/4

  test_update:
    runs-on: ubuntu-latest
    needs: ["build"]
    env: 
      NO_COLOR: 1
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - uses: pnpm/action-setup@v4
        with:
          version: 9.1.4
      - uses: actions/setup-node@v4
        with:
          node-version: 23
          cache: "pnpm"
      - name: Build like before
        run: |
          pnpm install  
          pnpm run build
      - name: Run snapshot update test
        id: update_test
        run: |
          cd test
          bun moonwall test update_snapshot -u > snapshot_output.txt 2>&1
      - name: Check if files were modified in the 2 minutes
        run: |
          cd test
          find suites/update/__snapshots__/test_basic.ts.snap suites/update/timbo.txt
          find suites/update/__snapshots__/test_basic.ts.snap suites/update/timbo.txt -mmin -2 | wc -l | grep -q "2"
      - name: Check console output for snapshot updates
        run: |
          cd test
          cat snapshot_output.txt
          grep "Snapshots  3 updated" snapshot_output.txt

  test_chopsticks:
    runs-on: ubuntu-latest
    needs: ["build"]
    strategy:
      fail-fast: false
      matrix:
        suite: ["chopsticks", "multi_chopsticks", "chopsticks_round"]
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 9.1.4
      - uses: actions/setup-node@v4
        with:
          node-version: 23
          cache: "pnpm"
      - name: Build like before
        run: |
          pnpm install   
          pnpm run build
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Run ${{matrix.suite}}
        run: |
          cd test
          bun moonwall test ${{matrix.suite}}

      # disabled until we have an available instance of moonscope running
      # - name: Use Send Report Action
      #   if: always()
      #   uses: ./.github/send-report-action
      #   with:
      #     table: dev_reports
      #     moonwallenv: moonwall_chopsticks
      #     report_file_path: tmp/testReports.json
      #     moonscope: "https://moonscope.boo:3345"

  test_readonly:
    runs-on: ubuntu-latest
    needs: ["build"]
    strategy:
      fail-fast: false
      matrix:
        suite: ["eth_test", "viem_test", "papi_readonly"]
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 9.1.4
      - uses: actions/setup-node@v4
        with:
          node-version: 23
          cache: "pnpm"
      - name: Build like before
        run: |
          pnpm install   
          pnpm run build
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Run standard ${{matrix.suite}}
        run: |
          cd test
          bun papi add dot -n polkadot
          bun moonwall test ${{matrix.suite}}
      #  disabled until web3.js fix their stuff
      # - name: Run standard web3 run
      #   run: bun moonwall test web3_test

  test_zombie:
    runs-on: ubuntu-latest
    needs: ["build"] # Changed from ["build", "cache_moonbeam"]
    strategy:
      fail-fast: false
      matrix:
        suite: ["zombie_test", "zombie_multi_para", "zombie_noPara"]
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 9.1.4
      - uses: actions/setup-node@v4
        with:
          node-version: 23
          cache: "pnpm"
      - uses: oven-sh/setup-bun@v1 # Added setup-bun for bun commands
        with:
          bun-version: latest
      # Removed Restore moonbeam binary cache step as it's handled by 'build' job
      - name: Build like before
        run: |
          pnpm install   
          pnpm run build
      - name: Download other binaries
        run: |
          cd test
          bun moonwall download polkadot stable2409 ./tmp
          bun moonwall download polkadot-execute-worker stable2409 ./tmp
          bun moonwall download polkadot-prepare-worker stable2409 ./tmp
      - name: Run ${{matrix.suite}}
        run: |
          cd test
          bun moonwall test ${{matrix.suite}}